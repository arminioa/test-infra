#!/usr/bin/env bash

set -euo pipefail

DRY_RUN="${DRY_RUN:-false}"
TMPDIR="$(mktemp -d)"
LIST_URL="https://github.com/FedeDP/kernel-crawler/raw/dev/kernels/x86_64/list.json"

function pretty_echo() {
	echo
	echo "> ${1}"
}

function get_kernel_releases() {
	curl -sL -o $TMPDIR/sample.json $LIST_URL
}

function generate_from_kernel_releases() {
	for distro_family in $(jq -cr '. | keys[]' $TMPDIR/sample.json); do
		while read -r release
		do
			read -r version
			read -r target
			pretty_echo "Generating configs for:"
			echo "release: $release	version: $version	target: $target"
			test $DRY_RUN == "true" || make -e TARGET_KERNEL="${release}" -e TARGET_DISTRO="${target}" generate >/dev/null
		done < <(jq -cr ".${distro_family}[] | (.kernelrelease, .kernelversion, .target)" $TMPDIR/sample.json)
	done
}

function cleanup() {
	rm -r $TMPDIR
}

# $1: the program to check
function check_program {
    if hash "$1" 2>/dev/null; then
        type -P "$1" >&/dev/null
    else
        echo "> aborting because $1 is required..." >&2
       return 1
    fi
}

function main() {
	check_program "jq"
	get_kernel_releases
	generate_from_kernel_releases
	cleanup
}

trap cleanup SIGINT

main $@
